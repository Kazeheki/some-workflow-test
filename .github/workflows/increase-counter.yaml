name: increase counter

on:
  workflow_call:
    inputs:
      user:
        type: string
        description: The user the counter should be shown for.
        required: true

  workflow_dispatch:
    inputs:
      user:
        type: choice
        options:
          - FIRST
          - SECOND
        description: The user the counter should be shown for.
        required: true

jobs:
  increase:
    outputs:
      counter_value: ${{ steps.result.outputs.counter_value }}
    runs-on:
      - ubuntu-latest
    steps:
      - if: inputs.user == 'FIRST'
        run: |
          echo "COUNTER_VALUE=$((${{vars.FIRST_COUNTER}} + 1))" >> "$GITHUB_ENV"
      - if: inputs.user == 'SECOND'
        run: |
          echo "COUNTER_VALUE=$((${{vars.SECOND_COUNTER}} + 1))" >> "$GITHUB_ENV"
      - id: result
        run: |
          echo "counter_value=$COUNTER_VALUE" >> "$GITHUB_OUTPUT"

  update:
    runs-on:
      - ubuntu-latest
    needs:
      - increase
    steps:
      - name: generate token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      - uses: actions/github-script@v7
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
          counterFirst: ${{ vars.FIRST_COUNTER }}
          counterSecond: ${{ vars.SECOND_COUNTER }}
          user: ${{ inputs.user }}
        with:
          script: |
            console.log(context)

            const { counterFirst, counterSecond, user } = process.env

            const variableName = `${user}_COUNTER`;

            let variableValue;
            if (user === "FIRST") {
              variableValue = counterFirst + 1;
            } else if (user === "SECOND") {
              variableValue = counterSecond + 1;
            } else {
              throw new Error("unknown user selected");
            }

            github.rest.actions.updateRepoVariable({
              "owner": context.repo.owner,
              "repo": context.repo.repo,
              "name": variableName,
              "value": variableValue
            });
